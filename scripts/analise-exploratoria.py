#---------------------------------------------------

#PROMPT: â€‹Crie um script em Python que carregue um conjunto de dados, lide com valores ausentes e gere estatÃ­sticas descritivas para anÃ¡lise exploratÃ³ria.

#ğŸ’¡ O que esse script faz?
#âœ… Carrega um arquivo .csv

#âœ… Exibe estrutura do DataFrame

#âœ… Trata valores ausentes com estratÃ©gias adequadas

#âœ… Gera resumo estatÃ­stico para dados numÃ©ricos e categÃ³ricos

#âœ… Exporta os dados limpos para um novo .csv

#ğŸ“Œ Requisitos:
#Arquivo .csv com colunas variadas

#Instalar o Pandas:

#---------------------------------------------------

import pandas as pd

# 1. Carregando o conjunto de dados (altere o caminho do arquivo se necessÃ¡rio)
file_path = 'seu_arquivo.csv'  # Substitua pelo seu arquivo real
df = pd.read_csv(file_path)

# 2. Exibir as primeiras linhas
print("\nğŸ“Œ Primeiras 5 linhas do conjunto de dados:")
print(df.head())

# 3. Verificar tipos de dados e valores nulos
print("\nğŸ“Œ InformaÃ§Ãµes do DataFrame:")
print(df.info())

print("\nğŸ“Œ Quantidade de valores ausentes por coluna:")
print(df.isnull().sum())

# 4. Lidando com valores ausentes

# EstratÃ©gia: preencher colunas numÃ©ricas com a mÃ©dia
for coluna in df.select_dtypes(include=['float64', 'int64']).columns:
    if df[coluna].isnull().any():
        media = df[coluna].mean()
        df[coluna].fillna(media, inplace=True)

# EstratÃ©gia: preencher colunas categÃ³ricas com o valor mais frequente (moda)
for coluna in df.select_dtypes(include=['object']).columns:
    if df[coluna].isnull().any():
        moda = df[coluna].mode()[0]
        df[coluna].fillna(moda, inplace=True)

# 5. Verificar novamente os valores ausentes
print("\nğŸ“Œ ApÃ³s tratamento, valores ausentes por coluna:")
print(df.isnull().sum())

# 6. EstatÃ­sticas descritivas
print("\nğŸ“Œ EstatÃ­sticas descritivas (variÃ¡veis numÃ©ricas):")
print(df.describe())

print("\nğŸ“Œ EstatÃ­sticas descritivas (variÃ¡veis categÃ³ricas):")
print(df.describe(include=['object']))

# 7. Salvar o DataFrame tratado (opcional)
df.to_csv('dados_tratados.csv', index=False)
print("\nâœ… Arquivo tratado salvo como 'dados_tratados.csv'")
