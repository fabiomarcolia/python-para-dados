# ============================================
# M√ìDULOS EM PYTHON
# Autor: Fabio Mar√ßolia
# ============================================

# --------------------------------------------
# O que s√£o m√≥dulos?
# --------------------------------------------
# M√≥dulos s√£o arquivos Python (.py) que cont√™m fun√ß√µes, classes ou vari√°veis.
# Eles servem para organizar melhor o c√≥digo, reaproveitar fun√ß√µes
# e manter tudo mais limpo em projetos maiores.

# Podemos usar:
# - M√≥dulos internos (criados por voc√™)
# - M√≥dulos embutidos no Python (ex: math, random, os)
# - M√≥dulos externos (instalados via pip, como pandas, requests)

# --------------------------------------------
# EXEMPLO 1: Usando m√≥dulos embutidos
# --------------------------------------------
import math
import random

print("Raiz quadrada de 16:", math.sqrt(16))
print("N√∫mero aleat√≥rio entre 1 e 100:", random.randint(1, 100))

# --------------------------------------------
# EXEMPLO 2: Criando e usando m√≥dulos personalizados
# --------------------------------------------
# Suponha que temos dois arquivos no mesmo diret√≥rio:
# ‚îú‚îÄ‚îÄ modulos_em_python.py
# ‚îú‚îÄ‚îÄ calculadora.py
# ‚îî‚îÄ‚îÄ saudacoes.py

# üìÑ calculadora.py
# def somar(a, b):
#     return a + b
# def dividir(a, b):
#     return a / b if b != 0 else "Erro"

# üìÑ saudacoes.py
# def bom_dia(nome):
#     print(f"Bom dia, {nome}!")

# Importando tudo do m√≥dulo calculadora
import calculadora

# Importando fun√ß√£o espec√≠fica do m√≥dulo saudacoes
from saudacoes import bom_dia

print("Soma com m√≥dulo calculadora:", calculadora.somar(5, 3))
bom_dia("Fabio")

# --------------------------------------------
# EXEMPLO 3: Usando __name__ == '__main__'
# --------------------------------------------
# Isso serve para definir se o arquivo est√° sendo executado
# diretamente ou est√° sendo apenas importado como m√≥dulo.
# Veja como usar no seu pr√≥prio m√≥dulo (ex: calculadora.py):

# if __name__ == '__main__':
#     print("Executando diretamente calculadora.py")
#     print(somar(2, 2))

# No arquivo principal (modulos_em_python.py), isso n√£o ser√° executado
# ao importar o m√≥dulo ‚Äî somente quando o m√≥dulo for rodado diretamente.

# --------------------------------------------
# RESUMO:
# - Crie arquivos separados para fun√ß√µes reutiliz√°veis
# - Importe m√≥dulos com `import` ou `from ... import ...`
# - Use `__name__ == '__main__'` para testes locais
# - Explore os m√≥dulos padr√£o do Python (https://docs.python.org/3/library/)
